#include "header.h"
#include "declarations.h"

struct scull_sqset *ptr;
struct scull_sqset *curr = NULL;
struct scull_sqset *head = NULL;
struct scull_sqset * creat_scull(struct scull_dev *fdev,size_t size,const char __user *ubuff)
{  
    int noi,i;
    struct scull_sqset *lqset;
    lqset=NULL; 
    printk(KERN_INFO "Inside creat_scull");
    noi=size/(fdev->qsetsize *fdev->quantumsize);
    if (size %(fdev->qsetsize *fdev->quantumsize)>0)
        noi++;
       
    printk(KERN_INFO "no of scull_sqset needed =%d",noi);
    for (i=0;i<noi;i++)
    {
        if (NULL==curr)
        {
             ptr=(struct scull_sqset *)kmalloc(sizeof(struct scull_sqset),GFP_KERNEL);
             if (!ptr)
             {
                  printk(KERN_ERR "\n head Node creation failed \n");
                  curr = head = ptr;
                  ptr->next = NULL;
                  printk(KERN_INFO "address of headnode =%p \n",ptr);
             }
        }
        else 
        {
              ptr=get_item(i,*buff +23*i);  
              curr->next=ptr ;
              curr=curr->next;
              ptr->next = NULL;
               
        }
       // lqset=link_scull(noi,*ubuff); 
    }
    //this lqset points to the first item which is the head node in the linked list
   //notc=copy_from_user(desp,ubuff,size);
    return lqset;
}
